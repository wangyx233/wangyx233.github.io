{"title":"Hexo","description":null,"language":null,"link":"https://wangyx233.github.io","pubDate":"Fri, 18 May 2018 06:46:57 GMT","lastBuildDate":"Mon, 04 Jun 2018 03:06:08 GMT","generator":"hexo-generator-json-feed","webMaster":"Usaki","items":[{"title":"问题记录","link":"https://wangyx233.github.io/2018/05/18/记录/","description":"css 哪些样式子元素可以继承字体相关的都可以,font-size, color, weight, cursor…lineheight 是可以继承的，是和字体大小有关，normal，自动合理的空间；具体高度；数字和百分比都是基于字体大小和布局，位置相关的那些不会被继承，什么pading，margin，position，display, border, height…","pubDate":"Fri, 18 May 2018 06:46:57 GMT","guid":"https://wangyx233.github.io/2018/05/18/记录/","category":""},{"title":"Chrome DevTools","link":"https://wangyx233.github.io/2018/02/05/Chrome DevTools/","description":"简介 Chrome DevTools(Chrome 开发者工具)，是Chrome浏览器内嵌的一个用于网页开发和调试的工具。若想体验最新版的DevTools，官网还提供了一款 Chrome Canary(Chrome 金丝雀)浏览器。 如何打开 Elements","pubDate":"Mon, 05 Feb 2018 09:35:01 GMT","guid":"https://wangyx233.github.io/2018/02/05/Chrome DevTools/","category":""},{"title":"Gulp介绍","link":"https://wangyx233.github.io/2017/08/03/自动化构建工具(一)--Gulp/","description":"Gulp是一个前端自动化工具，主要用来做一些预处理语言的编译，如：Less,Jade，","pubDate":"Thu, 03 Aug 2017 07:29:27 GMT","guid":"https://wangyx233.github.io/2017/08/03/自动化构建工具(一)--Gulp/","category":""},{"title":"Echarts3.5.0以上世界地图nameMap变更","link":"https://wangyx233.github.io/2017/06/27/Echarts3.5.0以上世界地图nameMap修改/","description":"今天发现使用Echarts，nameMap渲染的世界地图，没有显示美国的数据，美国的区域显示的为United States。经过查找发现，Echarts应该是在3.5.0版本的时候，对world.js的一些国家名称进行了变更，从而导致用官网实例提供的nameMap,无法匹配到国家，进而无法显示。大致看了一下地图，修改后对应的国家信息为： 123456789101112131415var nameMap =&#123; &apos;Central African Rep.&apos;:&apos;中非共和国&apos;, &apos;Dem. Rep. Congo&apos;:&apos;刚果民主共和国&apos;, &apos;Lao PDR&apos;:&apos;老挝&apos;, &apos;W. Sahara&apos;:&apos;西撒哈拉&apos;, &apos;Tanzania&apos;:&apos;坦桑尼亚联合共和国&apos;, &apos;United States&apos;:&apos;美国&apos;, &apos;Korea&apos;: &apos;韩国&apos;, &apos;Dem. Rep. Korea&apos;: &apos;朝鲜&apos;, &apos;Congo&apos;: &apos;刚果共和国&apos;, &apos;Solomon Is.&apos;: &apos;所罗门群岛&apos;, &apos;Dominican Rep.&apos;:&apos;多明尼加共和国&apos;, &apos;S. Sudan&apos;: &apos;南苏丹&apos; , &quot;Côte d&apos;Ivoire&quot;: &apos;科特迪瓦&apos;,&#125;","pubDate":"Tue, 27 Jun 2017 09:23:11 GMT","guid":"https://wangyx233.github.io/2017/06/27/Echarts3.5.0以上世界地图nameMap修改/","category":""},{"title":"一些设计知识~","link":"https://wangyx233.github.io/2017/06/21/写给大家看的设计书/","description":"最近要看的书好多，全都在排排坐，先挑了一本设计类的书籍《写给大家看的设计书》 设计的四大原则对比对比是为页面增加视觉效果的最有效的途径,也是在不同元素之间建立一种有组织的层次结构最有效方法。要记住一个重要规则:要想实现有效的对比,对比就必须 强烈。千万不要畏畏缩缩。字体的对比，颜色的对比，一定要保持强烈，差别不大的对比没有效果。对比的根本目的有两个,这两个目的相辅相成,无法分开。一个目的是增强页面的效果,如果一个页面看起来很有意思,往往更有可读性。另一个目的是有助于信息的组织。读者应当能立即了解信息以何种方式组织,以及从一项到另一项的逻辑流程。对比元素不能让读者混淆,也不能错误地强调重点(即本不该是重点的元素)。 重复-一致性设计的某些方面需要在整个作品中重复。控制读者视线，设计中视觉元素的重复可以将作品中的各部分连在一起,从而统一并增强整个作品。重复的目的就是统一,并增强视觉效果。不要低估页面视觉效果的威力,如果一个作品看起来很有趣,它往往也更易于阅读。要避免太多地重复一个元素,重复太多会让人讨厌。要注意对比的价值可以通过字体选择、线宽、颜色、形状、大小、空间等来增加对比。 增加对比很容易,途径有很多,这可能是增加视觉效果最有意思也最让人满意的方 法了。重要的是:对比一定要强烈!","pubDate":"Wed, 21 Jun 2017 03:37:56 GMT","guid":"https://wangyx233.github.io/2017/06/21/写给大家看的设计书/","category":""},{"title":"D3.js学习","link":"https://wangyx233.github.io/2017/06/21/D3.js学习/","description":"D3.js实现数据和元素的绑定对于DOM结点的选择，d3.select(‘tag’)选择第一个元素,d3.selectAll(‘tag’)选择所有的元素。对于数据的绑定，tag.datum()将一个数据绑定到元素上，tag.data()将数组内元素分别绑定各元素。 1var body = d3.select(&apos;body&apos;);","pubDate":"Wed, 21 Jun 2017 02:47:53 GMT","guid":"https://wangyx233.github.io/2017/06/21/D3.js学习/","category":""},{"title":"Canvas学习","link":"https://wangyx233.github.io/2017/06/12/Canvas学习/","description":"&lt;canvas&gt;标签定义一个矩形框画布，默认没有边框和内容,默认大小为300像素×150像素(wxh)。 1234&lt;canvas id=&quot;myCanvas&quot; width=&quot;200&quot; height=&quot;100&quot;style=&quot;border:1px solid #000000;&quot;&gt;若浏览器不支持canvas标签，将显示这些文字&lt;/canvas&gt; 在Js文件中绘制Canvas元素。 12345678var c=document.getElementById(&quot;myCanvas&quot;);if(c.getContext(&apos;2d&apos;))&#123; //支持性检查 var ctx=c.getContext(&quot;2d&quot;);//获取渲染上下文，参数为上下文的格式 ctx.fillStyle=&quot;#FF0000&quot;; //填充样式，可为颜色、图案、渐变等。 ctx.fillRect(0,0,150,75);//矩形的填充方法fillRect(x,y,width,height)，矩形左上角坐标为(0,0)&#125;else &#123; // canvas-unsupported code here&#125; 画矩形canvas支持一种原生的图形绘制-矩形 1234fillRect(x, y, width, height) //绘制一个填充的矩形strokeRect(x, y, width, height) //绘制一个矩形的边框clearRect(x, y, width, height) //清除指定矩形区域，让清除部分完全透明rect(x, y, width, height) //绘制一个左上角坐标为（x,y），宽高为width以及height的矩形。","pubDate":"Mon, 12 Jun 2017 05:55:20 GMT","guid":"https://wangyx233.github.io/2017/06/12/Canvas学习/","category":""},{"title":"Three.js学习笔记","link":"https://wangyx233.github.io/2017/06/05/three.js学习指南/","description":"一切都建立在引入Three.js后，得到的全局变量THREE。对于页面中，存放渲染效果的元素，可以是普通的div，也可以是canvas。对于div，渲染时添加节点：1234var renderer = new THREE.WebGLRenderer();renderer.setSize(400, 300);document.getElementById(&apos;test&apos;).appendChild(renderer.domElement);renderer.setClearColor(0x000000);//清除原本所在页面颜色，并设置 而对于定义的canvas标签，其定义及渲染：123&lt;canvas id=&quot;mainCanvas&quot; width=&quot;400px&quot; height=&quot;300px&quot; &gt;&lt;/canvas&gt;var renderer = new THREE.WebGLRenderer(&#123; canvas: document.getElementById(&apos;mainCanvas&apos;)&#125;); 基本概念 主要分为三大部分，场景（scene）、照相机（camera）、渲染器（renderer） 首先定义容器渲染所在的DOM包括宽高、颜色等，利用照相机(投影方式)把作为容器的场景渲染到页面上。 声明渲染器对象renderer，canvas对象的获取方法为renderer.domElement，相机也需要加到场景中去","pubDate":"Mon, 05 Jun 2017 05:59:18 GMT","guid":"https://wangyx233.github.io/2017/06/05/three.js学习指南/","category":"Three.js"},{"title":"优化","link":"https://wangyx233.github.io/2017/05/24/优化/","description":"angular 页码跳转 页面高度，加载 包括scroll，scrollintoview 过滤器进行筛选 ng-repeat 配合ng-class ng-if的使用影响dom节点设置 angular 标签页 用ng-init 修改index dom操作，mouseover，keydown，keyup，keycode flot插件，highcharts插件使用echarts的数据会每次merge，解决方法： (1) setoptions的选项 (2) 每次对数组置空","pubDate":"Wed, 24 May 2017 07:09:55 GMT","guid":"https://wangyx233.github.io/2017/05/24/优化/","category":""},{"title":"问题记录","link":"https://wangyx233.github.io/2017/05/24/问题记录/","description":"性能优化 js压缩 js加载顺序 http缓存 减少请求数 chrome调试工具 linux命令学习cdcd .xxxvim 没有文件会创建cat 命令cat filename 一次性查看文件cat &gt;filename 创建一个文件，但不能编辑已有的cat file1 file2 &gt;file3 合并多个文件cd .sshvim config vim 里 n是下一个ssh configmv 重命名或是移动mv old new 改名mv old/ new当前目录.cp 复制 -r 递归处理ctrl+D 退出服务器文件内查找字符串 命令模式下输入“/字符串”， grep table的高度一定后，即使给每个tr固定高度，还是会平分，若是所有tr的高度撑不开table时；所以，给table外的div设置高度，再给table每个tr设置高度即可 提出有效的解决问题方法，多学习，思考！！ 找问题要快，准，定位准确哦 angular,router,resolve 只有resolve里所有的promise都resolved获取成功才会触发$stateChangeSuccess,进而实例化controller和模板。 对于发现的问题，疑问，不正常的地方要探究一下，比如时间显示，比如数据不正常，比如报错。。。可能都是bug或者问题需要修正，不能视而不见 reduce 的使用 sass mixin 与 less的mixin angular filter 应用 如：ng-repeat | filter echart 的各种点击事件 node 不支持es6的语法，import什么的，配置一下.babelrc https://babeljs.cn/docs/usage/babelrc/还有一个env字段，可以对BABEL_ENV或者NODE_ENV指定的不同的环境变量，进行不同的编译操作presets，启动怎样的预设转码，es2015 ,stage-0 , stage-1 ,stage-2 , stage-3 ,reactplugins，转码规则一些插件 calc 计算，嵌套 位置100%；生效？？父元素高度确定。flex布局下的高度100%，flex-direction: column.和父元素的高度一致 text-ellipsis 生效 字符串替换等操作可以考虑用正则替换。 $compile 更新dom变化，html-&gt;template.$link pre标签，保持空格、换行等格式化，转义字符也会进行相应的转换，sup标签，上标标签 注意if判断true false，可能直接就不执行了。0的值-》false，有的时候不能直接通过if判断是不是有这个字段 base64图片，直接引入css或者html中，可能会比普通图片大，影响首屏加载配合gzip压缩大小差不多等。对小的背景图可能会有用一些。减少了http请求。雪碧图的区别 伪元素，::before,::after，content: ‘’; box-shadow 外阴影outset 内阴影inset box-shadow: h-shadow v-shadow blur spread color inset; hv-正是右面，上面，负值是左边下面。blur模糊程度， spread延伸程度，正值扩大，负值-缩小。都是px单位。filter: drop-shadow(5px 5px 10px black) 阴影不能叠加，可以给图片添加阴影 x,y,blue,colorbackground-img: linear-gradient(90deg, color width,) js worker, web worker 进程 angular module，包含controller，directive，filter，service等等的一个模块，先执行常量定义，然后按照注册顺序，注册顺序执行配置。angular.module(‘name’,[])创建一个module，相同的会被重写。angular.module(‘name’),读取 在想要添加commit的分支上，用git cherry-pick newcommitId 在地址栏输入地址后，到看到页面操作。输入物理过程，键盘什么的。输入的是关键字的话，会传给浏览器默认的搜索引擎，并带上浏览器的标识。url的话然后，浏览器检测输入是否合法。检查HSTS列表HTTP Strict Transport Security。记录了那些只能通过htts协议访问的网站，并把http-&gt;httpsDNS查询，1.首先浏览器检测域名是否在缓存中，2.是否在本地的hosts里面。3.调用函数查询。4.没有的话，向dns服务器查询请求。 css的重排与重绘，reflow，repaintreflow 重排，页面布局，页面布局改变，改变字体，style，js的dom操作，激活伪类，css3的animation和transition。repaint 重绘，不一定需要重排，只影响元素的外观风格，不会影响布局。元素颜色其中消耗最低的是transform和opacity两个属性（当然还有会触发Composite的其他CSS属性），其次是Paint相关属性。所以在制作动画时，建议使用transform的translate替代margin或position中的top、right、bottom和left，同时使用transform中的scaleX或者scaleY来替代width和height 页面有滚动条，table也有滚动条，双滚动条。hover的时候显示滚动条。表头和body分开，固定表头，滚动body getAttribute()获取属性，dom操作基础夯实 angular中动态增加或删除，借助ng-repeat来修改。[],删除splice 循环使用几个颜色时，可以用%来获得每个的索引 angular ui-sref 传参数为空是””,默认过滤这个参数，从而导致取不到，值为undefined的情况。 document.designMode = “on” ,页面是可编辑的状态 锚点点击滚动效果 scroll-behavior: smooth; background-clip，裁剪效果，border-box，padding-box，content-box；background-origin,定位开始。 svg图片大小缩放 preserveAspectRatio sort xy 1 升序大小比较；降序的话则相反。比较函数接收两个参数，如果第一个参数应该位于第二个之前则返回一个负数，如果两个参数相等则返回0，如果第一个参数应该位于第二个之后则返回一个正数。 retina屏，canvas，transform3d object-fit yarn, npm 区别。yarn解决了不确定性依赖yarn.lock,网络问题，并行下载等。npm install-&gt; yarn; npm install –save -&gt; yarn add; npm install –global -&gt; yarn global add; npm install pkg@version -&gt; yarn add pkg@version; npm uninstall -&gt; yarn remove; npm rebuild -&gt; yarn install –force; 升级包 yarn upgrade post方法，put方法区别。post方法不是幂等的，创建资源；put==replace是幂等的，更新资源；patch是对put的补充。","pubDate":"Wed, 24 May 2017 07:06:44 GMT","guid":"https://wangyx233.github.io/2017/05/24/问题记录/","category":""},{"title":"hexo部署github的问题","link":"https://wangyx233.github.io/2017/04/11/hexo部署github的问题/","description":"用hexo搭建博客，配置直接部署到github的方法：1.安装 hexo-deployer-git插件1npm install hexo-deployer-git --save 2.在hexo根目录的_config.yml中进行deploy的配置123456deploy: type: git repo: [github repository url] //eg:git@github.com:xxx.git or https://github.com/xxx.git branch: master //branch name message: &quot;Blog updated: &#123;&#123; now（&apos;YYYY-MM-DD&apos;）&#125;&#125;&quot; //commit messagePs:注意缩进和空格 3.通过hexo deploy（即hexo d）命令进行部署，在此之前需要进行hexo generate（即hexo g）编译。123hexo-deployer-git插件的作用是生成.deploy_git文件，并且把hexo g编译后的public中的文件复制到.deploy_git文件夹下，然后进行git操作，推到远端github仓库。 注意：","pubDate":"Tue, 11 Apr 2017 12:03:27 GMT","guid":"https://wangyx233.github.io/2017/04/11/hexo部署github的问题/","category":"hexo,github"},{"title":"Hello World","link":"https://wangyx233.github.io/2017/04/11/hello-world/","description":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server","pubDate":"Tue, 11 Apr 2017 06:06:25 GMT","guid":"https://wangyx233.github.io/2017/04/11/hello-world/","category":""}]}